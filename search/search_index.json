{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-]","pipeline":["stemmer"]},"docs":[{"location":"","title":"Tips","text":"<ul> <li>\u9879\u76ee workflow\u261e</li> </ul>"},{"location":"code_quality/","title":"Code Quality Management of Project Workflow","text":"<p>Define</p> <p>Code Quality: code style, code logic, code recommended (replace or upgrade).</p> <p> PEP8 \u662f\u5b98\u65b9\u51fa\u54c1\u7684 code style\uff0c\u4e0d\u5c11\u516c\u53f8\u4e5f\u6709\u81ea\u5df1\u7684\u4e00\u5957 style\uff0c\u9664\u4e86\u5e73\u65f6 coding \u65f6\u6ce8\u610f\u9075\u5faa\u5916\uff0c\u597d\u7684\u683c\u5f0f\u5316\u5de5\u5177\u548c\u68c0\u67e5\u5de5\u5177\u4e5f\u662f\u4fdd\u8bc1\u4ee3\u7801\u8d28\u91cf\u7684\u5fc5\u8981\u73af\u8282\u3002\u8fd8\u597d\u73b0\u5728 Python \u751f\u6001\u5f88\u597d\uff0c\u6709\u4e0d\u5c11\u5de5\u5177\u90fd\u53ef\u4ee5\u5b9e\u73b0\u3002</p>"},{"location":"code_quality/#code-quality-tools","title":"Code Quality Tools","text":"<p>\u53c2\u6570\u914d\u7f6e\uff08\u73af\u5883\u53d8\u91cf\uff09\u4e00\u822c\u90fd\u662f\u9996\u5148\u8981\u89e3\u51b3\u7684\uff0c\u968f\u7740\u53d1\u5c55 Python \u5728\u8fd9\u4e9b\u65b9\u9762\u4e5f\u8d8a\u6765\u8d8a\u89c4\u8303\u548c\u7edf\u4e00\uff0c\u8fd9\u4e5f\u7ed9\u5f00\u53d1\u5e26\u6765\u4e86\u4e0d\u5c11\u4fbf\u6377\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f PEP 621\uff0c\u4e3a\u7edf\u4e00\u914d\u7f6e\u9879\u6253\u4e0b\u57fa\u7840\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u5229\u7528\u5176\u5b83\u5df2\u6709\u914d\u7f6e\u9009\u9879\u4e3a\u914d\u7f6e\u8fdb\u4e00\u6b65\u7f29\u51cf\u4e86\u590d\u6742\u5ea6\uff08\u4e00\u5904\u914d\u7f6e\u5373\u53ef\uff09\u2014\u2014 <code>.gitignore</code>\uff0c\u4e00\u4f1a\u513f\u5c31\u80fd\u770b\u5230\u5f88\u591a\u5de5\u5177\u90fd\u590d\u7528\u4e86\u6b64\u6587\u4ef6\u5927\u5927\u51cf\u5c11\u4e86\u914d\u7f6e\u6d41\u7a0b\u3002</p> <p>\u6b64\u9879\u76ee\u7528\u5230\u7684\u5de5\u5177\u5305\u62ec\uff1a</p> <ul> <li>Project and virtualenv management with dependencies (pyproject.toml): PDM</li> <li>Formatter (code style): black</li> <li>Linter (code style and static code logic and code recommend): ruff</li> <li>Static type checker (static code logic): mypy</li> <li>Test (dynamic code logic): pytest</li> </ul> <p>\u6ce8\u610f</p> <p>Python &gt;= 3.11.1</p> \u5b89\u88c5\u4f9d\u8d56<pre><code>pdm add -d black ruff\n</code></pre>"},{"location":"code_quality/#formatter-black","title":"Formatter - black","text":"<p>\u683c\u5f0f\u5316\u5de5\u5177\u8f83\u5e38\u7528\u7684\u6709\u4e24\u4e2a\uff1ablack \u662f\u4e00\u4e2a pep8 \u98ce\u683c\u7684\u683c\u5f0f\u5316\u5de5\u5177\uff0cisort \u662f\u4e00\u4e2a \u53ef\u4ee5\u6392\u5e8f import \u7684\u5de5\u5177\u3002\u5176\u4e2d isort \u5df2\u7ecf\u88ab linter \u5de5\u5177 ruff (--fix) \u6240\u66ff\u4ee3\uff0c\u800c black \u7684\u683c\u5f0f\u5316\u529f\u80fd\u8fd8\u5728\u5b8c\u5584\u4e2d\uff0c\u671f\u5f85\u4e4b\u540e\u7684\u5927\u7edf\u4e00\uff0cAll in one~</p> <p>\u5176\u5b83\u7684\u5de5\u5177\u8fd8\u6709</p> <ul> <li>autopep8</li> <li>yapf</li> </ul> <p>\u5e38\u7528\u914d\u7f6e\u9009\u9879\u5982\u4e0b\uff1a</p> pyproject.toml<pre><code>[tool.black]\nline-length = 120\n# 23.1.0 \u4e4b\u540e\u5c06\u81ea\u52a8\u63a8\u65ad python \u7248\u672c\n# target-version = [\"py311\"]\n# extend-exclude = '| migragte'\n</code></pre> <p>black \u4f1a\u81ea\u52a8\u52a0\u8f7d\u6839\u76ee\u5f55\u4e0b\u7684 pyproject.toml \u4e2d\u76f8\u5173\u914d\u7f6e\u3002\u5f53\u4e0d\u8bbe\u7f6e exclude \u9009\u9879\u65f6\uff0cblack \u81ea\u52a8\u6392\u9664 <code>gitignore</code> \u4e2d\u914d\u7f6e\u9879\u3002</p> <p>Tip</p> TOML<pre><code>exclude = '''\n/(\n    | \\.direnv\n    | \\.eggs\n    | \\.git\n    | \\.hg\n    | \\.mypy_cache\n    | \\.nox\n    | \\.tox\n    | \\.venv\n    | venv\n    | \\.svn\n    | \\.ipynb_checkpoints\n    | _build\n    | buck-out\n    | build\n    | dist\n    | __pypackages__\n)/\n'''\n# | \u5f00\u5934\u8868\u793a\u4efb\u610f\u4f4d\u7f6e\uff0c ^/ \u5f00\u5934\u8868\u793a\u6839\u76ee\u5f55\u4e0b\u3002\n</code></pre> <p>\u914d\u7f6e\u597d\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>pdm run black .</code> \u68c0\u67e5\u3002<code>--check</code> \u53ef\u4ee5</p> Bash<pre><code># check and format\npdm run black .\n# or only check\npdm run black --check .\n</code></pre>"},{"location":"code_quality/#linter-ruff","title":"Linter - ruff","text":"<p>\u5229\u7528\u9759\u6001\u6e90\u7801\u5206\u6790(static source code analysis)\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\u3001\u903b\u8f91\u548c\u53ef\u80fd\u7684\u4f18\u5316\u65b9\u6848\uff0c\u6765\u8fbe\u5230 clean code\u3002flake8 \u662f\u5176\u4e2d\u4e00\u4e2a\u8f83\u4e3a\u51fa\u540d\u7684 linter\uff08\u5b9e\u8d28\u662fPyFlakes\u3001pycodestyle\u3001McCabe \u7684wrapper \uff09\uff0c\u5e76\u6709\u8bb8\u591a\u56f4\u7ed5\u5176\u7684 plugins\u3002\u800c\u76ee\u524d ruff \u4f5c\u4e3a\u540e\u8d77\u4e4b\u79c0\u5927\u6709\u671b\u5176\u9879\u80cc\u7684\u8d8b\u52bf\uff0c\u4e14\u66f4\u73b0\u4ee3\u5316\u3001\u66f4\u4fbf\u6377\u3001\u66f4\u7edf\u4e00\uff0c\u4f46\u5176\u8fd8\u4e0d\u592a\u7a33\u5b9a\uff0c\u66f4\u65b0\u9891\u7e41\u4e14\u6709\u80af\u80fd breaking change\u3002\u672c\u6587\u91c7\u7528 ruff\uff0c\u4e24\u8005\u7684 linter \u4ee3\u53f7\u57fa\u672c\u4e00\u81f4\uff0c\u5207\u6362\u5e94\u8be5\u4e0d\u96be\u3002</p> <p>\u5e38\u7528\u7684 linter \u53ca\u4ee3\u53f7\uff1a</p> \u4ee3\u53f7 \u539f\u6709\u5e93 \u529f\u80fd F pyflakes code logic E pycodestyle pep8 \u57fa\u7840\u89c4\u8303, \u4e0d\u5305\u62ec naming docstring W pycodestyle pep8 \u57fa\u7840\u89c4\u8303 D pydocstyle <code>docstring conventions</code> \u8865\u5145 pycodestyle N pep8-naming <code>naming conventions</code> \u8865\u5145 pycodestyle A flake8-builtins \u662f\u5426\u8986\u76d6\u4e86\u5185\u7f6e\u53d8\u91cf\u540dpep8-naming B flake8-bugbear (opinionated) \u8865\u5145 pyflakes \u548c pycodestyle \uff08\u8f83\u6742\u4e71\uff09 PIE flake8-pie \u6ca1\u6709\u5fc5\u8981\u7684 pass \u6216\u591a\u4f59 <code>**</code> \u8865\u5145 pyflakes \u548c pycodestyle \u7684\u6742\u9879 C4 flake8-comprehensions recommend <code>comprehension</code> replace DTZ flake8-datetimez datetime recommend <code>tzinfo</code> replace PTH flake8-use-pathlib recommend <code>pathlib</code> replace SIM flake8-simplify \u7b80\u5316\u8bed\u53e5\u6216\u8c03\u7528 recommend code replace UP pyupgrade upgrade syntax for newer versions ANN flake8-annotations \u51fd\u6570\u662f\u5426\u4f7f\u7528 annotations\uff0c\u4e0e mypy \u76f8\u8f85\u76f8\u6210 TCH flake8-type-checking imports to move in or out of type-checking blocks C90 mccabe <code>function complex</code> \u590d\u6742\u5ea6\u68c0\u67e5 Q flake8-quotes \u5f15\u53f7\u76f8\u5173 S flake8-bandit security \u6bd4\u5982\u786c\u7f16\u7801\u5bc6\u7801 I isort import sorted BLE flake8-blind-except \u68c0\u67e5 except PT flake8-pytest-style pytest \u76f8\u5173 G flake8-logging-format recomad logging use extra Ruff 0.0.238+ Bash<pre><code># \u67e5\u770b\u6240\u6709\u652f\u6301\u7684 Linter\nruff linter\n# \u67e5\u770b\u67d0\u4e2a\u89c4\u5219\u7684\u8bf4\u660e\nruff rule D401\n</code></pre> <p>\u8fd8\u4e0d\u652f\u6301\u7684 linter</p> <ul> <li>match case (Structural Pattern Matching)</li> </ul> <p>\u5e38\u7528\u7684\u914d\u7f6e\u5982\u4e0b\uff1a</p> pyproject.toml<pre><code>[tool.ruff]\nline-length = 120\ntarget-version = \"py311\"\nselect = [\n\"F\",   # pyflake\n\"E\",   # pycodestyle\n\"W\",   # pycodestyle\n\"B\",   # bugbear\n\"N\",   # naming\n\"I\",   # isort\n\"UP\",  # upgrade\n\"A\",   # builtins\n\"S\",   # bandit\n\"SIM\",\n\"RUF\",\n\"PTH\",\n\"ANN\",\n]\nignore = ['D211', 'D213']\n# include .gitignore\nrespect-gitignore = true\n[tool.ruff.pydocstyle]\n# Google-style docstrings\nconvention = \"google\"\n[tool.ruff.flake8-builtins]\nbuiltins-ignorelist = [\"id\"]\n</code></pre> <p>\u6301\u7eed\u5173\u6ce8</p> <p>ruff \u9700\u8981\u4e0e black \u4e00\u540c\u4f7f\u7528\uff0c\u56e0\u4e3a ruff \u6682\u7f13\u4e86\u76f8\u5173 formatter \u5de5\u4f5c\u3002</p> <p>\u68c0\u67e5\uff1a</p> RUN<pre><code>ruff .\n# or\nruff check .\n</code></pre>"},{"location":"code_quality/#static-type-checking-with-mypy","title":"Static type checking with mypy","text":"<p>Python \u662f\u5f3a\u7c7b\u578b\u52a8\u6001\u8bed\u8a00\uff0c\u9700\u8981\u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u63a8\u5bfc\uff0c\u8fd9\u662f\u4ed6\u7684\u4f18\u52bf\u4f46\u4e5f\u662f\u52a3\u52bf\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u5728\u9759\u6001\u6e90\u7801\u5206\u6790\u65f6\u53d1\u73b0\u95ee\u9898\uff0c\u5f15\u5165\u4e86 type hint\uff0c\u901a\u8fc7\u7c7b\u578b\u68c0\u67e5\u6765\u589e\u5f3a\u7f16\u7801\u8d28\u91cf\u548c\u7f16\u8f91\u63d0\u793a\u3002</p> <p>type annotation (PEP 3107)\u53ea\u5b9a\u4e49\u4e86\u51fd\u6570\u6ce8\u89e3\uff0ctype hint (PEP 484)\u8303\u56f4\u66f4\u5927\u3002</p> <p>Tip</p> <p>mypy \u662f\u4e00\u4e2a\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u7684\u5de5\u5177\u3002 pydantic \u662f\u4e00\u4e2a runtime type checking\u3002</p> <p>\u5e38\u7528\u914d\u7f6e\u9009\u9879\u5982\u4e0b\uff1a</p> pyproject.toml<pre><code>[tool.mypy]\n# \u5982\u679c\u4e0d\u6307\u5b9a\u5219\u6309\u7167 mypy \u6240\u4f9d\u8d56\u7684\u73af\u5883\npython-version = 3.11\n</code></pre> <p>Tip</p> <p>mypy \u4e5f\u53ef\u4ee5\u4ece\u9879\u76ee\u6839\u76ee\u5f55\uff08\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\uff09\u7684 pyproject.yoml \u8bfb\u53d6\u914d\u7f6e</p>"},{"location":"code_quality/#when-should-they-be-used","title":"When should they be used?","text":""},{"location":"code_quality/#coding","title":"coding","text":"<p>\u4f7f\u7528 vscode editor \u65f6\u53ef\u4ee5\u5b89\u88c5\u63d2\u4ef6\u652f\u6301 format \u548c lint\u3002 \u6216\u8005\u4f7f\u7528\u547d\u4ee4\u884c\u5f62\u5f0f\u3002</p> <ul> <li>Black Formatter \u8bbe\u7f6e python \u7684\u9ed8\u8ba4\u683c\u5f0f\u5316\u5de5\u5177\u5373\u53ef\u3002</li> <li>Ruff \u63d0\u793a\u548c\u81ea\u52a8\u4fee\u590d</li> <li>mypy \u5f53\u524d\u73af\u5883\u5b89\u88c5 mypy \u540e\u8bbe\u7f6e\u5982\u4e0b\uff0c\u6216\u8005\u4f7f\u7528 Mypy \u63d2\u4ef6\u3002\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 vscode \u81ea\u5e26\u7684 pyright\uff08\u4e0e mypy \u4e00\u6837\u662f\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u5668\uff09   JSON<pre><code>  {\n\"python.linting.mypyEnabled\": true\n}\n</code></pre></li> </ul>"},{"location":"code_quality/#committing","title":"committing","text":"<p>\u4f7f\u7528 pre-commit hooks\uff0c\u914d\u7f6e <code>.pre-commit-config.yaml</code> \u540e\u8fd0\u884c <code>pre-commit install</code> \u5b89\u88c5 git hook \u811a\u672c\u3002</p> <p>Warning</p> <p>\u672c\u5730\u9879\u76ee\u9700\u8981\u7eb3\u5165 git \u7ba1\u7406\uff0c\u5373\u9879\u76ee\u76ee\u5f55\u4e0b\u6709 <code>.git</code> \u6587\u4ef6\u5939\u3002</p> <p>\u4e4b\u540e\u518d <code>git commit</code> \u90fd\u4f1a\u5148\u8fd0\u884c\u68c0\u67e5\uff0c\u5982\u679c\u4e0d\u901a\u8fc7\u5219\u4e0d\u80fd\u63d0\u4ea4\u3002</p> .pre-commit-config.yaml<pre><code>repos:\n- repo: https://github.com/psf/black\nrev: 23.1.0\nhooks:\n- id: black\nlanguage_version: python3.11\n- repo: https://github.com/charliermarsh/ruff-pre-commit\nrev: v0.0.239\nhooks:\n- id: ruff\n</code></pre>"},{"location":"code_quality/#checked-in-ci-pipeline","title":"checked in (CI pipeline)","text":"<p>\u786e\u4fdd\u9879\u76ee\u5e93\u4e2d\u7684\u4ee3\u7801\u8d28\u91cf\u3002</p> .github/workflows/ci.yaml<pre><code>name: CI\non: [push]\njobs:\ntest:\nname: \"Testing\"\nstrategy:\nfail-fast: false\nmatrix:\npython-version: [\"3.11\"]\npdm-version: [\"2.4.2\"]\nos: [ubuntu-latest]\nruns-on: ${{ matrix.os }}\nsteps:\n- uses: actions/checkout@v3\n- name: Set up PDM (with Python)\nuses: pdm-project.setup-pdm@v3\nwith:\npython-version: ${{ matrix.python-version }}\nversion: ${{ matrix.pdm-version }}\n- name: Install dependencies\nrun: |\npdm sync -d -G test\n- name: Run Test\nrun: |\npdm run pytest --cov=./ --cov-report=xml tests\n# - name: Upload coverage to Codecov\n#   uses: codecov/codecov-action@v3\ncode-quality:\nname: \"Code Quality\"\nstrategy:\nfail-fast: false\nmatrix:\npython-version: [\"3.11\"]\npdm-version: [\"2.4.2\"]\nos: [ubuntu-latest]\nruns-on: ${{ matrix.os }}\nsteps:\n- uses: actions/checkout@v3\n- name: Set up PDM (with Python)\nuses: pdm-project.setup-pdm@v3\nwith:\npython-version: ${{ matrix.python-version }}\nversion: ${{ matrix.pdm-version }}\n- name: Install dependencies\nrun: |\npdm sync -d\n- name: Run Black\nrun: |\npdm run -v black . --check --exclude=tests/\n- name: Run Ruff\nrun: |\npdm run -v ruff --format=github .\n- name: Run Mypy\nrun: |\npdm run -v mypy . --prety\n- name: Run Safety\nrun: pdm run -v safety check\n</code></pre>"},{"location":"code_quality/#conclusion","title":"Conclusion","text":"<ul> <li>\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u4f7f\u7528 black \u6e29\u548c\u7684\u683c\u5f0f\u5316\u4e3a\u7b26\u5408 pep8 \u98ce\u683c\u7684\u4ee3\u7801\uff0c\u7136\u540e\u5229\u7528 ruff \u8fdb\u4e00\u6b65\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\u548c\u903b\u8f91\uff0c\u6700\u540e\u518d\u4f7f\u7528 mypy \u68c0\u67e5\u4ee3\u7801\u7c7b\u578b\u662f\u5426\u6b63\u786e\uff0c\u53ef\u9009\u7684\u662f\u4f7f\u7528 pytest \u8fdb\u884c\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u589e\u5f3a\u4ee3\u7801\u8d28\u91cf\u3002</li> <li>\u5411\u4ed3\u5e93\u63d0\u4ea4\u4ee3\u7801\u524d\uff0c\u5229\u7528 pre-commit \u518d\u6b21\u68c0\u67e5\uff0c\u786e\u4fdd\u63d0\u4ea4\u7684\u4ee3\u7801\u7b26\u5408\u89c4\u8303\u3002</li> <li>\u4ed3\u5e93\u81ea\u6211\u68c0\u67e5\uff0c\u5229\u7528 github action \u68c0\u67e5\u4ed3\u5e93\u4e2d\u7684\u4ee3\u7801\u662f\u5426\u7b26\u5408\u89c4\u8303\u786e\u4fdd\u5176\u5b83\u4eba\u4e5f\u6b63\u786e\u63d0\u4ea4\u4e86\u4ee3\u7801\u3002</li> </ul>"},{"location":"code_quality/#next-steps","title":"Next Steps","text":"<ul> <li>mypy \u53ef\u4ee5\u68c0\u67e5\u7684\u7c7b\u578b\u5f88\u591a\uff0c\u53ef\u4ee5\u67e5\u770b\u6587\u6863\u5b66\u4e60\u66f4\u591a\u7684 type hint \u6280\u5de7</li> <li>pytest \u4e5f\u662f\u4e00\u9879\u91cd\u8981\u4e14\u590d\u6742\u7684\u5de5\u4f5c\uff0c\u9700\u8981\u66f4\u6df1\u5165\u7684\u5b66\u4e60</li> <li>\u53ef\u4ee5\u5229\u7528 github action \u505a\u66f4\u591a\u6709\u8da3\u7684\u4e8b\u513f\uff0c\u6bd4\u5982\u81ea\u52a8\u751f\u6210\u6587\u6863</li> </ul>"},{"location":"code_quality/#reference","title":"Reference","text":"<p>\u4f7f\u7528 pyproject.toml \u4fdd\u8bc1\u4ee3\u7801\u8d28\u91cf</p> <p>An open source Python project CI pipeline</p> <p>Python Code Quality</p>"},{"location":"docs/","title":"Code Documentation Management of Project Workflow","text":"<p>Define</p> <p>Document Type: user documents and development documents.</p> <p>Document Format: comment docstring markdown</p>"},{"location":"docs/#_1","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<ul> <li>mkdocs  markdown doc \u751f\u6210</li> <li>mkdocs-material  mkdocs material style (default google)</li> <li>mkdocstrings[python]  # \u5c06 python \u6587\u6863\u5b57\u7b26\u4e32\u751f\u6210\u6587\u6863</li> <li>mdx-include  # \u53ef\u4ee5\u4f7f\u7528 <code>\\{\\! path \\!\\}</code> \u5f62\u5f0f\u5d4c\u5957 md \u6587\u4ef6</li> </ul>"},{"location":"docs/#_2","title":"\u7f16\u5199\u6587\u6863","text":"Bash<pre><code># \u521b\u5efa mkdocs \u683c\u5f0f\nmkdocs new .\n# \u4f1a\u751f\u6210 docs/index.md \u548c mkdocs.yml\n</code></pre>"},{"location":"docs/#_3","title":"\u914d\u7f6e","text":"mkdocs.yml<pre><code>site_name: Tips\nrepo_url: https://github.com/studyxiao/tips\nrepo_name: studyxiao/tips\ntheme:\nname: \"material\"\nlogo: \"\"\nlanguage: zh\npalette:\n- scheme: default\nprimary: pink\naccent: pink\ntoggle:\nicon: material/weather-sunny\nname: Switch to dark mode\n- scheme: slate\nprimary: pink\naccent: pink\ntoggle:\nicon: material/weather-night\nname: Switch to light mode\nfont:\ntext: Open Sans\ncode: Fira Code\nfeatures:\n- navigation.tabs\n- navigation.tabs.sticky\n- navigation.top\n- toc.follow\n- search.suggest\n- content.code.copy\n- content.code.annotate\n- content.tabs.link\nplugins:\n- mkdocstrings:\nhandlers:\npython:\noptions:\ndocstring_style: google\n- search:\nlang:\n- en\nseparator: '[\\s\\u200b\\-]'\nnav:\n- Tips: index.md\n- Workflow:\n- Code Qulity: code_quality.md\n- Documentation: docs.md\n# - reference.md\n# - explanation.md\nmarkdown_extensions:\n- admonition\n- pymdownx.details\n- pymdownx.superfences\n- pymdownx.highlight:\nlinenums: true\nanchor_linenums: true\nauto_title: true\n- pymdownx.inlinehilite\n- pymdownx.snippets\n- pymdownx.tabbed:\nalternate_style: true\n- tables\n- attr_list\n- pymdownx.emoji\n- toc:\npermalink: \"#\"\n</code></pre>"},{"location":"docs/#md","title":"md \u6587\u6863","text":"<p>docs \u6587\u4ef6\u5939\u4e0b\u5c31\u662f\u7f16\u5199\u7684 md \u6587\u6863\uff0c\u7f16\u5199\u540e\u5728 <code>mkdocs.yml</code> \u6587\u4ef6\u7684 <code>nav</code> \u6807\u7b7e\u4e0b\u5f15\u7528\u5373\u53ef\u3002</p>"},{"location":"docs/#pep257-docstrings","title":"PEP257-docstrings \u6587\u6863","text":"<p>\u5728 yml \u6587\u4ef6\u4e2d\u52a0\u5165 <code>plugins</code> \u914d\u7f6e\uff1a YAML<pre><code>plugins:\n- mkdocstrings\n</code></pre></p> <p>\u4f7f\u7528 docstring \u5728 docs/ \u4e0b\u7684 markdown \u6587\u4ef6\u4e2d\u4f7f\u7528 <code>package.module</code> \u81ea\u52a8\u5f15\u5165\u6587\u6863\u5b57\u7b26\u4e32</p> <p>\u5f15\u5165\u4e00\u4e2a python \u6587\u4ef6</p> <p>\u914d\u5408\u63d2\u4ef6</p>"},{"location":"docs/#todo","title":"TODO","text":""},{"location":"docs/#_4","title":"\u542f\u52a8","text":""},{"location":"docs/#_5","title":"\u672c\u5730\u542f\u52a8","text":"Bash<pre><code>mkdocs serve\n</code></pre>"},{"location":"docs/#_6","title":"\u90e8\u7f72","text":"Bash<pre><code>mkdocs build\n# \u521b\u5efa site/ \u6587\u4ef6\u5939\n# github \u652f\u6301\u5728\u4ed3\u5e93\u4e2d\u521b\u5efa gh-pages \u5206\u652f\u6765\u63d0\u4f9b\u5728\u7ebf\u6587\u6863\uff0cmkdocs \u96c6\u6210\u4e86\u64cd\u4f5c\uff0c\u76f4\u63a5\nmkdocs gh-deploy\n# \u8be5\u547d\u4ee4\u4f1a\u81ea\u52a8build \u5e76\u5c06\u7ed3\u679c\u63a8\u9001\u5230\u7ed1\u5b9a\u7684github \u4ed3\u5e93\u4e0b\u7684 gh-pages \u5206\u652f\u4e0b\n# \u7f51\u5740\u662f\uff1attps://username.github.io/project-name/\n</code></pre> Bash<pre><code>git init\ngit add\ngit commit -m\ngit branch -M main\ngit remote add origin url\ngit fetch\ngit branch --set-upstream-to=origin/amin main\ngit pull origin main --rebase\ngit push -u origin main\n\ngit branch --set-upstream-to main\ngit rebase -i\ngit push -f origin HEAD\n</code></pre>"},{"location":"docs/#reference","title":"Reference","text":"<p>Documenting Python Code and Projects</p> <p>Build Your Python Project Documentation With MkDocs</p>"}]}